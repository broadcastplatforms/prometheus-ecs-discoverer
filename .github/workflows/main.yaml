# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

name: Main

on:
  workflow_dispatch:
  push:

jobs:

  main:

    runs-on: ubuntu-latest

    steps:

      - uses: actions/checkout@v2

      - uses: rlespinasse/github-slug-action@v3.x

      - uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Setup Pre-commit
        run: |
          pip install pre-commit
          pre-commit install

      - name: Cache Pre-commit
        uses: actions/cache@v2
        with:
          path: ~/.cache/pre-commit
          key: ${{ runner.os }}-python-${{ matrix.python-version }}-pre-commit

      - name: Setup Poetry
        uses: Gr1N/setup-poetry@v7
        with:
          poetry-version: 1.1.8

      - name: Cache Poetry
        uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-python-${{ matrix.python-version }}-poetry-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            - ${{ runner.os }}-python-${{ matrix.python-version }}-poetry-

      - run: poetry install --no-interaction --no-ansi

      - run: pre-commit run --verbose --all-files

      - run: ./bin/test

      - uses: codecov/codecov-action@v2
        with:
          env_vars: OS,PYTHON
          fail_ci_if_error: true
          verbose: true

      - uses: cycjimmy/semantic-release-action@v2
        id: semantic
        with:
          semantic_version: 17.4.7
          extra_plugins: |
            @semantic-release/changelog
            @semantic-release/exec
            @semantic-release/git
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}

      - name: Determine Docker tag version suffix
        run: |
          echo "steps.semantic.outputs.new_release_version=${{ steps.semantic.outputs.new_release_version }}"

          if [[ "${{ steps.semantic.outputs.new_release_version }}" != "" ]]; then
            version=${{ steps.semantic.outputs.new_release_version }}
          else
            version=${{ env.GITHUB_REF_SLUG }}
            if [[ $version == v* ]]; then version=$(echo $version | cut -c2-); fi
          fi

          echo "version=$version"

          echo "DOCKER_TAG=$version" >> $GITHUB_ENV

      - uses: docker/setup-qemu-action@v1

      - uses: docker/setup-buildx-action@v1

      - uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - uses: docker/build-push-action@v2
        with:
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/prometheus_ecs_discoverer:latest
            ${{ secrets.DOCKER_USERNAME }}/prometheus_ecs_discoverer:${{ env.DOCKER_TAG }}
